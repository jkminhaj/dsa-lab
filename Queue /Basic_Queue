#include <iostream>
#include <queue>
using namespace std;

int main() {
    // Create a queue of integers
    queue<int> myQueue;

    // Push elements into the queue
    myQueue.push(10);  // Queue: [10]
    myQueue.push(20);  // Queue: [10, 20]
    myQueue.push(30);  // Queue: [10, 20, 30]
    myQueue.push(40);  // Queue: [10, 20, 30, 40]

    // Display the front and back elements
    cout << "Front element: " << myQueue.front() << endl;  // Output: 10
    cout << "Back element: " << myQueue.back() << endl;    // Output: 40

    // Get the size of the queue
    cout << "Queue size: " << myQueue.size() << endl;      // Output: 4

    // Check if the queue is empty
    if (myQueue.empty()) {
        cout << "Queue is empty." << endl;
    } else {
        cout << "Queue is not empty." << endl;  // Output: Queue is not empty.
    }

    // Pop an element from the front of the queue
    myQueue.pop();  // Removes 10 from the front

    // Display the updated front element
    cout << "Front element after pop: " << myQueue.front() << endl;  // Output: 20

    // Get the size of the queue after popping
    cout << "Queue size after pop: " << myQueue.size() << endl;  // Output: 3

    // Check the back element after popping
    cout << "Back element after pop: " << myQueue.back() << endl;  // Output: 40

    // Pop remaining elements and check if the queue is empty
    myQueue.pop();  // Removes 20
    myQueue.pop();  // Removes 30
    myQueue.pop();  // Removes 40

    cout << "Queue size after popping all elements: " << myQueue.size() << endl;  // Output: 0

    if (myQueue.empty()) {
        cout << "Queue is empty now." << endl;  // Output: Queue is empty now.
    } else {
        cout << "Queue is not empty." << endl;
    }

    return 0;
}
